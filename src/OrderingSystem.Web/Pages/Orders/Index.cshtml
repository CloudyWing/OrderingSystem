@page
@model CloudyWing.OrderingSystem.Web.Pages.Orders.IndexModel
@{
    ViewBag.Title = "點餐";
}
<h2>@ViewBag.Title</h2>
<form method="post">
    <p>
        <a class="btn btn-primary" asp-page="Upsert">新增</a>
    </p>
    <div class="table-responsive">
        <table class="table table-striped table-hover" v-if="records.length > 0">
            <thead>
                <tr>
                    <th scope="col">訂單編號</th>
                    <th scope="col">訂單日期</th>
                    <th scope="col">總額</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="record in records">
                    <td scope="row">{{ record.id }}</td>
                    <td scope="row">{{ record.date }}</td>
                    <td scope="row">{{ record.money }}</td>
                    <td scope="row">
                        <a :href="'@Url.Page("Upsert")?id=' + record.id" class="btn btn-primary" role="button">編輯</a>
                        <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" v-on:click="queryDetailsHandler(record.id)">詳細</button>
                        <button type="button" class="btn btn-danger" v-on:click="deleteHandler(record.id)">刪除</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">詳細資料</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th scope="col">產品名稱</th>
                                <th scope="col">數量</th>
                                <th scope="col">總金額</th>
                                <th scope="col">備註</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="detail in details">
                                <td scope="row">{{ detail.productName }}</td>
                                <td scope="row">{{ detail.quantity }}</td>
                                <td scope="row">{{ detail.cost }}</td>
                                <td scope="row">{{ detail.remark }}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        var pageMixin = {
            data: {
                records: [],
                details: []
            },
            methods: {
                queryDetailsHandler: function (id) {
                    axios.post('@Url.Page("Index", "GetDetails")', { id: id })
                        .then(response => {
                            this.details = response.data;
                        }).catch(thrown => {
                            alert(thrown);
                        });
                },
                deleteHandler: function (id) {
                    axios.post('@Url.Page("Index", "Delete")', { id: id })
                        .then(response => {
                            this.records = response.data;
                        }).catch(thrown => {
                            alert(thrown);
                        });
                }
            },
            mounted: function () {
                axios.post('@Url.Page("Index")')
                    .then(response => {
                        this.records = response.data;
                    }).catch(thrown => {
                        alert(thrown);
                    });
            }
        }

        mixins.push(pageMixin);
    </script>
}
